#server.port=9090
#server.contextPath=/report
#endpoints.shutdown.enabled=false
#endpoints.sensitive=false
security.basic.enabled=false
#spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.mvc.throw-exception-if-no-handler-found=true
#spring.resources.add-mappings=false
spring.profiles.active=local
# Logback Config
logging.path=logs
logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%-5level) %clr(%logger{15}){cyan} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{15} - %msg%n
#MySQL database connection
spring.jooq.sql-dialect=mysql
spring.datasource.url=jdbc:log4jdbc:mysql:///test?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=net.sf.log4jdbc.DriverSpy
#The initial number of connections that are created when the pool is started. Default value is 10
spring.datasource.tomcat.initial-size=2
#Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.tomcat.max-wait=10000
#Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=50
#The maximum number of connections that should be kept in the pool at all times.
spring.datasource.tomcat.max-idle=50
#The SQL query that will be used to validate connections from this pool before returning them to the caller.
#If specified, this query does not have to return any data, it just can't throw a SQLException. The default value is null.
spring.datasource.tomcat.validation-query=SELECT 1
#The minimum number of established connections that should be kept in the pool at all times.
spring.datasource.tomcat.min-idle=1
#whether objects will be validated before being borrowed from the pool.
spring.datasource.tomcat.test-on-borrow=true
#whether objects will be validated when a connection is first created.
spring.datasource.tomcat.test-on-connect=true
#whether objects will be validated by the idle object evictor (if any). If an object fails to validate, it will be dropped from the pool.
spring.datasource.tomcat.test-while-idle=true
#The number of milliseconds to sleep between runs of the idle connection validation/cleaner thread.
#This value should not be set under 1 second. It dictates how often we check for idle, abandoned connections,
#and how often we validate idle connections. (We set it one hour)
spring.datasource.tomcat.time-between-eviction-runs-millis=3600000
## Spring Session
spring.session.store-type=hash_map
## Spring JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=false
spring.jackson.serialization.indent-output=true